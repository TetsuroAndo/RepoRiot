services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-5050}:${PORT:-5050}"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER:-user}:${DB_PASSWORD:-password}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-reporiot_db}
    volumes:
      - /usr/src/app/node_modules
      - /usr/src/app/public
    networks:
      - app-network

  db:
    image: postgres:17
    ports:
      - "${DB_PORT:-5432}:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-reporiot_db}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-user} -d ${DB_NAME:-reporiot_db}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
